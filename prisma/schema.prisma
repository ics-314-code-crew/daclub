// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  // for local development
  // url      = env("DATABASE_URL")
  // for Vercel
  url       = env("POSTGRES_PRISMA_URL")
  // directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum Role {
  USER
  CLUB_ADMIN
  SUPER_ADMIN
}

model User {
  id           Int          @id @default(autoincrement())
  firstName    String
  lastName     String
  email        String       @unique
  password     String
  role         Role         @default(USER)
  clubs        Club[]       @relation("ClubAdmins")
  interests    Interest[]   @relation("UserInterests")
  notifications Notification[]
}

model Club {
  id           Int          @id @default(autoincrement())
  name         String       @unique
  description  String
  meetingTime  String
  location     String
  website      String?
  contactEmail String?
  photos       String[]
  categories   Interest[]   @relation("ClubInterests")
  admins       User[]       @relation("ClubAdmins")
  expiration   DateTime
  notifications Notification[]
}

model Interest {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  users    User[]    @relation("UserInterests")
  clubs    Club[]    @relation("ClubInterests")
}

model Notification {
  id          Int      @id @default(autoincrement())
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  clubId      Int?
  club        Club?    @relation(fields: [clubId], references: [id])
  message     String
  createdAt   DateTime @default(now())
  isRead      Boolean  @default(false)
}
